// Generated by Dagger (https://dagger.dev).
package com.udacity.asteroidradar.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import okhttp3.logging.HttpLoggingInterceptor;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_GetOkHttpClientFactory implements Factory<OkHttpClient> {
  private final Provider<HttpLoggingInterceptor> httpLoggingInterceptorProvider;

  public AppModule_GetOkHttpClientFactory(
      Provider<HttpLoggingInterceptor> httpLoggingInterceptorProvider) {
    this.httpLoggingInterceptorProvider = httpLoggingInterceptorProvider;
  }

  @Override
  public OkHttpClient get() {
    return getOkHttpClient(httpLoggingInterceptorProvider.get());
  }

  public static AppModule_GetOkHttpClientFactory create(
      Provider<HttpLoggingInterceptor> httpLoggingInterceptorProvider) {
    return new AppModule_GetOkHttpClientFactory(httpLoggingInterceptorProvider);
  }

  public static OkHttpClient getOkHttpClient(HttpLoggingInterceptor httpLoggingInterceptor) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.getOkHttpClient(httpLoggingInterceptor));
  }
}
